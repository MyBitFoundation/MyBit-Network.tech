{
  "contractName": "MyBitToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "LogBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051610c07380380610c07833981016040908152815160208084015192840151600281905591840180519094939093019261005391600391908601906100c2565b5081516100679060049060208501906100c2565b506005805460ff1916601217905533600081815260208181526040808320859055805185815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a350505061015d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061010357805160ff1916838001178555610130565b82800160010185558215610130579182015b82811115610130578251825591602001919060010190610115565b5061013c929150610140565b5090565b61015a91905b8082111561013c5760008155600101610146565b90565b610a9b8061016c6000396000f3006080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100c9578063095ea7b31461015357806318160ddd1461018b57806323b872dd146101b2578063313ce567146101dc57806342966c6814610207578063661884631461021f57806370a082311461024357806379cc67901461026457806395d89b4114610288578063a9059cbb1461029d578063d73dd623146102c1578063dd62ed3e146102e5575b600080fd5b3480156100d557600080fd5b506100de61030c565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610118578181015183820152602001610100565b50505050905090810190601f1680156101455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015f57600080fd5b50610177600160a060020a036004351660243561039a565b604080519115158252519081900360200190f35b34801561019757600080fd5b506101a0610400565b60408051918252519081900360200190f35b3480156101be57600080fd5b50610177600160a060020a0360043581169060243516604435610406565b3480156101e857600080fd5b506101f1610569565b6040805160ff9092168252519081900360200190f35b34801561021357600080fd5b50610177600435610572565b34801561022b57600080fd5b50610177600160a060020a036004351660243561061c565b34801561024f57600080fd5b506101a0600160a060020a036004351661070b565b34801561027057600080fd5b50610177600160a060020a0360043516602435610726565b34801561029457600080fd5b506100de61083b565b3480156102a957600080fd5b50610177600160a060020a0360043516602435610896565b3480156102cd57600080fd5b50610177600160a060020a0360043516602435610963565b3480156102f157600080fd5b506101a0600160a060020a03600435811690602435166109fc565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103925780601f1061036757610100808354040283529160200191610392565b820191906000526020600020905b81548152906001019060200180831161037557829003601f168201915b505050505081565b336000818152600160209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60025490565b600160a060020a03831660009081526020819052604081205482111561042b57600080fd5b600160a060020a038416600090815260016020908152604080832033845290915290205482111561045b57600080fd5b600160a060020a038316151561047057600080fd5b600160a060020a038416600090815260208190526040902054610499908363ffffffff610a2716565b600160a060020a0380861660009081526020819052604080822093909355908516815220546104ce908363ffffffff610a3916565b600160a060020a03808516600090815260208181526040808320949094559187168152600182528281203382529091522054610510908363ffffffff610a2716565b600160a060020a0380861660008181526001602090815260408083203384528252918290209490945580518681529051928716939192600080516020610a50833981519152929181900390910190a35060019392505050565b60055460ff1690565b33600090815260208190526040812054610592908363ffffffff610a2716565b336000908152602081905260409020556002546105b5908363ffffffff610a2716565b60025560408051838152905133917f38d762ef507761291a578e921acfe29c1af31a7331ea03e391cf16cfc4d4f581919081900360200190a26040805183815290516000913391600080516020610a508339815191529181900360200190a3506001919050565b336000908152600160209081526040808320600160a060020a038616845290915281205480831061067057336000908152600160209081526040808320600160a060020a03881684529091528120556106a5565b610680818463ffffffff610a2716565b336000908152600160209081526040808320600160a060020a03891684529091529020555b336000818152600160209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600160a060020a03821660009081526020819052604081205461074f908363ffffffff610a2716565b600160a060020a03841660009081526020818152604080832093909355600181528282203383529052205461078a908363ffffffff610a2716565b600160a060020a03841660009081526001602090815260408083203384529091529020556002546107c1908363ffffffff610a2716565b600255604080518381529051600160a060020a038516917f38d762ef507761291a578e921acfe29c1af31a7331ea03e391cf16cfc4d4f581919081900360200190a2604080518381529051600091600160a060020a03861691600080516020610a508339815191529181900360200190a350600192915050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103925780601f1061036757610100808354040283529160200191610392565b336000908152602081905260408120548211156108b257600080fd5b600160a060020a03831615156108c757600080fd5b336000908152602081905260409020546108e7908363ffffffff610a2716565b3360009081526020819052604080822092909255600160a060020a03851681522054610919908363ffffffff610a3916565b600160a060020a03841660008181526020818152604091829020939093558051858152905191923392600080516020610a508339815191529281900390910190a350600192915050565b336000908152600160209081526040808320600160a060020a0386168452909152812054610997908363ffffffff610a3916565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600082821115610a3357fe5b50900390565b600082820183811015610a4857fe5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582078c0548a8ea07278659ce26e180702de1bc8dad2be6420b6fe1db0096427d99d0029",
  "deployedBytecode": "0x6080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100c9578063095ea7b31461015357806318160ddd1461018b57806323b872dd146101b2578063313ce567146101dc57806342966c6814610207578063661884631461021f57806370a082311461024357806379cc67901461026457806395d89b4114610288578063a9059cbb1461029d578063d73dd623146102c1578063dd62ed3e146102e5575b600080fd5b3480156100d557600080fd5b506100de61030c565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610118578181015183820152602001610100565b50505050905090810190601f1680156101455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015f57600080fd5b50610177600160a060020a036004351660243561039a565b604080519115158252519081900360200190f35b34801561019757600080fd5b506101a0610400565b60408051918252519081900360200190f35b3480156101be57600080fd5b50610177600160a060020a0360043581169060243516604435610406565b3480156101e857600080fd5b506101f1610569565b6040805160ff9092168252519081900360200190f35b34801561021357600080fd5b50610177600435610572565b34801561022b57600080fd5b50610177600160a060020a036004351660243561061c565b34801561024f57600080fd5b506101a0600160a060020a036004351661070b565b34801561027057600080fd5b50610177600160a060020a0360043516602435610726565b34801561029457600080fd5b506100de61083b565b3480156102a957600080fd5b50610177600160a060020a0360043516602435610896565b3480156102cd57600080fd5b50610177600160a060020a0360043516602435610963565b3480156102f157600080fd5b506101a0600160a060020a03600435811690602435166109fc565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103925780601f1061036757610100808354040283529160200191610392565b820191906000526020600020905b81548152906001019060200180831161037557829003601f168201915b505050505081565b336000818152600160209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60025490565b600160a060020a03831660009081526020819052604081205482111561042b57600080fd5b600160a060020a038416600090815260016020908152604080832033845290915290205482111561045b57600080fd5b600160a060020a038316151561047057600080fd5b600160a060020a038416600090815260208190526040902054610499908363ffffffff610a2716565b600160a060020a0380861660009081526020819052604080822093909355908516815220546104ce908363ffffffff610a3916565b600160a060020a03808516600090815260208181526040808320949094559187168152600182528281203382529091522054610510908363ffffffff610a2716565b600160a060020a0380861660008181526001602090815260408083203384528252918290209490945580518681529051928716939192600080516020610a50833981519152929181900390910190a35060019392505050565b60055460ff1690565b33600090815260208190526040812054610592908363ffffffff610a2716565b336000908152602081905260409020556002546105b5908363ffffffff610a2716565b60025560408051838152905133917f38d762ef507761291a578e921acfe29c1af31a7331ea03e391cf16cfc4d4f581919081900360200190a26040805183815290516000913391600080516020610a508339815191529181900360200190a3506001919050565b336000908152600160209081526040808320600160a060020a038616845290915281205480831061067057336000908152600160209081526040808320600160a060020a03881684529091528120556106a5565b610680818463ffffffff610a2716565b336000908152600160209081526040808320600160a060020a03891684529091529020555b336000818152600160209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600160a060020a03821660009081526020819052604081205461074f908363ffffffff610a2716565b600160a060020a03841660009081526020818152604080832093909355600181528282203383529052205461078a908363ffffffff610a2716565b600160a060020a03841660009081526001602090815260408083203384529091529020556002546107c1908363ffffffff610a2716565b600255604080518381529051600160a060020a038516917f38d762ef507761291a578e921acfe29c1af31a7331ea03e391cf16cfc4d4f581919081900360200190a2604080518381529051600091600160a060020a03861691600080516020610a508339815191529181900360200190a350600192915050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103925780601f1061036757610100808354040283529160200191610392565b336000908152602081905260408120548211156108b257600080fd5b600160a060020a03831615156108c757600080fd5b336000908152602081905260409020546108e7908363ffffffff610a2716565b3360009081526020819052604080822092909255600160a060020a03851681522054610919908363ffffffff610a3916565b600160a060020a03841660008181526020818152604091829020939093558051858152905191923392600080516020610a508339815191529281900390910190a350600192915050565b336000908152600160209081526040808320600160a060020a0386168452909152812054610997908363ffffffff610a3916565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600082821115610a3357fe5b50900390565b600082820183811015610a4857fe5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582078c0548a8ea07278659ce26e180702de1bc8dad2be6420b6fe1db0096427d99d0029",
  "sourceMap": "211:697:105:-;;;475:431;8:9:-1;5:2;;;30:1;27;20:12;5:2;475:431:105;;;;;;;;;;;;;;;;;;;;;;;;;;;557:6;:21;;;475:431;;;632:16;;475:431;;;;;;;632:16;;:4;;:16;;;;;:::i;:::-;-1:-1:-1;708:16:105;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;732:8:105;:20;;-1:-1:-1;;732:20:105;749:2;732:20;;;769:10;732:8;760:20;;;;;;;;;;;:35;;;808:46;;;;;;;;;;;;;;;;;;475:431;;;211:697;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;211:697:105;;;-1:-1:-1;211:697:105;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "211:697:105:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;571:18:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;571:18:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;571:18:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2182:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2182:188:106;-1:-1:-1;;;;;2182:188:106;;;;;;;;;;;;;;;;;;;;;;;;;4776:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4776:77:106;;;;;;;;;;;;;;;;;;;;2645:447;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2645:447:106;-1:-1:-1;;;;;2645:447:106;;;;;;;;;;;;4857:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4857:74:106;;;;;;;;;;;;;;;;;;;;;;;591:271:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;591:271:98;;;;;4297:418:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4297:418:106;-1:-1:-1;;;;;4297:418:106;;;;;;;5133:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5133:99:106;-1:-1:-1;;;;;5133:99:106;;;;;1139:504:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1139:504:98;-1:-1:-1;;;;;1139:504:98;;;;;;;593:20:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;593:20:106;;;;1244:320;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1244:320:106;-1:-1:-1;;;;;1244:320:106;;;;;;;3544:296;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3544:296:106;-1:-1:-1;;;;;3544:296:106;;;;;;;958:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;958:132:106;-1:-1:-1;;;;;958:132:106;;;;;;;;;;571:18;;;;;;;;;;;;;;;-1:-1:-1;;571:18:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2182:188::-;2269:10;2249:4;2261:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;2261:29:106;;;;;;;;;;;:38;;;2310;;;;;;;2249:4;;2261:29;;2269:10;;2310:38;;;;;;;;-1:-1:-1;2361:4:106;2182:188;;;;:::o;4776:77::-;4842:6;;4776:77;:::o;2645:447::-;-1:-1:-1;;;;;2761:15:106;;2731:4;2761:15;;;;;;;;;;;2751:25;;;2743:34;;;;;;-1:-1:-1;;;;;2801:14:106;;;;;;:7;:14;;;;;;;;2816:10;2801:26;;;;;;;;2791:36;;;2783:45;;;;;;-1:-1:-1;;;;;2842:17:106;;;;2834:26;;;;;;-1:-1:-1;;;;;2884:15:106;;:8;:15;;;;;;;;;;;:27;;2904:6;2884:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;2866:15:106;;;:8;:15;;;;;;;;;;;:45;;;;2933:13;;;;;;;:25;;2951:6;2933:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;2917:13:106;;;:8;:13;;;;;;;;;;;:41;;;;2993:14;;;;;:7;:14;;;;;3008:10;2993:26;;;;;;;:38;;3024:6;2993:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;2964:14:106;;;;;;;:7;:14;;;;;;;;2979:10;2964:26;;;;;;;;:67;;;;3042:28;;;;;;;;;;;2964:14;;-1:-1:-1;;;;;;;;;;;3042:28:106;;;;;;;;;;-1:-1:-1;3083:4:106;2645:447;;;;;:::o;4857:74::-;4918:8;;;;4857:74;:::o;591:271:98:-;691:10;639:12;682:20;;;;;;;;;;;:33;;707:7;682:33;:24;:33;:::i;:::-;668:10;659:8;:20;;;;;;;;;;:56;730:6;;:19;;741:7;730:19;:10;:19;:::i;:::-;721:6;:28;760;;;;;;;;768:10;;760:28;;;;;;;;;;799:41;;;;;;;;828:1;;808:10;;-1:-1:-1;;;;;;;;;;;799:41:98;;;;;;;;-1:-1:-1;853:4:98;591:271;;;:::o;4297:418:106:-;4426:10;4387:4;4418:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4418:29:106;;;;;;;;;;4457:28;;;4453:169;;4503:10;4527:1;4495:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4495:29:106;;;;;;;;;:33;4453:169;;;4585:30;:8;4598:16;4585:30;:12;:30;:::i;:::-;4561:10;4553:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4553:29:106;;;;;;;;;:62;4453:169;4641:10;4663:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4632:61:106;;4663:29;;;;;;;;;;;4632:61;;;;;;;;;4641:10;4632:61;;;;;;;;;;;-1:-1:-1;4706:4:106;;4297:418;-1:-1:-1;;;4297:418:106:o;5133:99::-;-1:-1:-1;;;;;5211:16:106;5189:7;5211:16;;;;;;;;;;;;5133:99::o;1139:504:98:-;-1:-1:-1;;;;;1244:15:98;;1206:12;1244:15;;;;;;;;;;;:28;;1264:7;1244:28;:19;:28;:::i;:::-;-1:-1:-1;;;;;1226:15:98;;:8;:15;;;;;;;;;;;:46;;;;1369:7;:14;;;;;1384:10;1369:26;;;;;;:39;;1400:7;1369:39;:30;:39;:::i;:::-;-1:-1:-1;;;;;1340:14:98;;;;;;:7;:14;;;;;;;;1355:10;1340:26;;;;;;;:68;1475:6;;:19;;1486:7;1475:19;:10;:19;:::i;:::-;1466:6;:28;1551:23;;;;;;;;-1:-1:-1;;;;;1551:23:98;;;;;;;;;;;;;1585:36;;;;;;;;1609:1;;-1:-1:-1;;;;;1585:36:98;;;-1:-1:-1;;;;;;;;;;;1585:36:98;;;;;;;;-1:-1:-1;1634:4:98;1139:504;;;;:::o;593:20:106:-;;;;;;;;;;;;;;;-1:-1:-1;;593:20:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1244:320;1346:10;1307:4;1337:20;;;;;;;;;;;1327:30;;;1319:39;;;;;;-1:-1:-1;;;;;1372:17:106;;;;1364:26;;;;;;1428:10;1419:8;:20;;;;;;;;;;;:32;;1444:6;1419:32;:24;:32;:::i;:::-;1405:10;1396:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;1473:13:106;;;;;;:25;;1491:6;1473:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1457:13:106;;:8;:13;;;;;;;;;;;;:41;;;;1509:33;;;;;;;1457:13;;1518:10;;-1:-1:-1;;;;;;;;;;;1509:33:106;;;;;;;;;-1:-1:-1;1555:4:106;1244:320;;;;:::o;3544:296::-;3707:10;3645:4;3699:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3699:29:106;;;;;;;;;;:46;;3733:11;3699:46;:33;:46;:::i;:::-;3667:10;3659:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3659:29:106;;;;;;;;;;;;:87;;;3757:61;;;;;;3659:29;;3757:61;;;;;;;;;;;-1:-1:-1;3831:4:106;3544:296;;;;:::o;958:132::-;-1:-1:-1;;;;;1060:15:106;;;1038:7;1060:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;958:132::o;936:110:74:-;994:7;1016:6;;;;1009:14;;;;-1:-1:-1;1036:5:74;;;936:110::o;1101:129::-;1159:7;1186:5;;;1204:6;;;;1197:14;;;;1224:1;1101:129;-1:-1:-1;;;1101:129:74:o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./BurnableToken.sol\";\nimport \"../../math/SafeMath.sol\";\n\n// @title ERC20 token contract with burning capabilities\n// @notice Standard ERC20 contract with a deflationary supply.\ncontract MyBitToken is BurnableToken{\n  using SafeMath for uint256;\n\n  // @notice constructor: initialized\n  // @param (string) _tokenURI = The URI where information about this token can be found\n  // @param (uint) _totalSupply = The initial supply of the token\n  constructor(string _tokenURI, string _symbol, uint _totalSupply)\n  public {\n      supply = _totalSupply;                        // Update total supply\n      name = _tokenURI;                         // Set the id for reference\n      symbol = _symbol;\n      decimals = uint8(18);\n      balances[msg.sender] = _totalSupply;\n      emit Transfer(address(0), msg.sender, _totalSupply);    // Transfer event indicating token creation\n  }\n}\n",
  "sourcePath": "/home/peter/Documents/Work/MyBit/MyBit-Network.tech/contracts/tokens/erc20/MyBitToken.sol",
  "ast": {
    "absolutePath": "/home/peter/Documents/Work/MyBit/MyBit-Network.tech/contracts/tokens/erc20/MyBitToken.sol",
    "exportedSymbols": {
      "MyBitToken": [
        33996
      ]
    },
    "id": 33997,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33944,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:105"
      },
      {
        "absolutePath": "/home/peter/Documents/Work/MyBit/MyBit-Network.tech/contracts/tokens/erc20/BurnableToken.sol",
        "file": "./BurnableToken.sol",
        "id": 33945,
        "nodeType": "ImportDirective",
        "scope": 33997,
        "sourceUnit": 32521,
        "src": "26:29:105",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/peter/Documents/Work/MyBit/MyBit-Network.tech/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 33946,
        "nodeType": "ImportDirective",
        "scope": 33997,
        "sourceUnit": 23464,
        "src": "56:33:105",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33947,
              "name": "BurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32520,
              "src": "234:13:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableToken_$32520",
                "typeString": "contract BurnableToken"
              }
            },
            "id": 33948,
            "nodeType": "InheritanceSpecifier",
            "src": "234:13:105"
          }
        ],
        "contractDependencies": [
          9813,
          10246,
          32520,
          34344
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 33996,
        "linearizedBaseContracts": [
          33996,
          32520,
          9813,
          34344,
          10246
        ],
        "name": "MyBitToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 33951,
            "libraryName": {
              "contractScope": null,
              "id": 33949,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23463,
              "src": "257:8:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$23463",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "251:27:105",
            "typeName": {
              "id": 33950,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "270:7:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 33994,
              "nodeType": "Block",
              "src": "549:357:105",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33960,
                      "name": "supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34017,
                      "src": "557:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33961,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33957,
                      "src": "566:12:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "557:21:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33963,
                  "nodeType": "ExpressionStatement",
                  "src": "557:21:105"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33964,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34019,
                      "src": "632:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33965,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33953,
                      "src": "639:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "632:16:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33967,
                  "nodeType": "ExpressionStatement",
                  "src": "632:16:105"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33968,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34021,
                      "src": "708:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33969,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33955,
                      "src": "717:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "708:16:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33971,
                  "nodeType": "ExpressionStatement",
                  "src": "708:16:105"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33972,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        34023
                      ],
                      "referencedDeclaration": 34023,
                      "src": "732:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 33974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "749:2:105",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 33973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "743:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": "uint8"
                      },
                      "id": 33975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "743:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "732:20:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 33977,
                  "nodeType": "ExpressionStatement",
                  "src": "732:20:105"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33978,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34009,
                        "src": "760:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 33981,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 33979,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35775,
                          "src": "769:3:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "769:10:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "760:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33982,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33957,
                      "src": "783:12:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "760:35:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33984,
                  "nodeType": "ExpressionStatement",
                  "src": "760:35:105"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 33987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "825:1:105",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 33986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "817:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "817:10:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 33989,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35775,
                          "src": "829:3:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "829:10:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33991,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33957,
                        "src": "841:12:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33985,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10237,
                      "src": "808:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 33992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:46:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33993,
                  "nodeType": "EmitStatement",
                  "src": "803:51:105"
                }
              ]
            },
            "documentation": null,
            "id": 33995,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33953,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 33995,
                  "src": "487:16:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33952,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33955,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 33995,
                  "src": "505:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33954,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33957,
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 33995,
                  "src": "521:17:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33956,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:53:105"
            },
            "payable": false,
            "returnParameters": {
              "id": 33959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:105"
            },
            "scope": 33996,
            "src": "475:431:105",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 33997,
        "src": "211:697:105"
      }
    ],
    "src": "0:909:105"
  },
  "legacyAST": {
    "absolutePath": "/home/peter/Documents/Work/MyBit/MyBit-Network.tech/contracts/tokens/erc20/MyBitToken.sol",
    "exportedSymbols": {
      "MyBitToken": [
        33996
      ]
    },
    "id": 33997,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33944,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:105"
      },
      {
        "absolutePath": "/home/peter/Documents/Work/MyBit/MyBit-Network.tech/contracts/tokens/erc20/BurnableToken.sol",
        "file": "./BurnableToken.sol",
        "id": 33945,
        "nodeType": "ImportDirective",
        "scope": 33997,
        "sourceUnit": 32521,
        "src": "26:29:105",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/peter/Documents/Work/MyBit/MyBit-Network.tech/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 33946,
        "nodeType": "ImportDirective",
        "scope": 33997,
        "sourceUnit": 23464,
        "src": "56:33:105",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33947,
              "name": "BurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32520,
              "src": "234:13:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableToken_$32520",
                "typeString": "contract BurnableToken"
              }
            },
            "id": 33948,
            "nodeType": "InheritanceSpecifier",
            "src": "234:13:105"
          }
        ],
        "contractDependencies": [
          9813,
          10246,
          32520,
          34344
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 33996,
        "linearizedBaseContracts": [
          33996,
          32520,
          9813,
          34344,
          10246
        ],
        "name": "MyBitToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 33951,
            "libraryName": {
              "contractScope": null,
              "id": 33949,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23463,
              "src": "257:8:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$23463",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "251:27:105",
            "typeName": {
              "id": 33950,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "270:7:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 33994,
              "nodeType": "Block",
              "src": "549:357:105",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33960,
                      "name": "supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34017,
                      "src": "557:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33961,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33957,
                      "src": "566:12:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "557:21:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33963,
                  "nodeType": "ExpressionStatement",
                  "src": "557:21:105"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33964,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34019,
                      "src": "632:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33965,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33953,
                      "src": "639:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "632:16:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33967,
                  "nodeType": "ExpressionStatement",
                  "src": "632:16:105"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33968,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34021,
                      "src": "708:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33969,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33955,
                      "src": "717:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "708:16:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33971,
                  "nodeType": "ExpressionStatement",
                  "src": "708:16:105"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33972,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        34023
                      ],
                      "referencedDeclaration": 34023,
                      "src": "732:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 33974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "749:2:105",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 33973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "743:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": "uint8"
                      },
                      "id": 33975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "743:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "732:20:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 33977,
                  "nodeType": "ExpressionStatement",
                  "src": "732:20:105"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33978,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34009,
                        "src": "760:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 33981,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 33979,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35775,
                          "src": "769:3:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "769:10:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "760:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33982,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33957,
                      "src": "783:12:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "760:35:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33984,
                  "nodeType": "ExpressionStatement",
                  "src": "760:35:105"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 33987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "825:1:105",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 33986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "817:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "817:10:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 33989,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35775,
                          "src": "829:3:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "829:10:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33991,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33957,
                        "src": "841:12:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33985,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10237,
                      "src": "808:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 33992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:46:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33993,
                  "nodeType": "EmitStatement",
                  "src": "803:51:105"
                }
              ]
            },
            "documentation": null,
            "id": 33995,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33953,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 33995,
                  "src": "487:16:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33952,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33955,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 33995,
                  "src": "505:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33954,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33957,
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 33995,
                  "src": "521:17:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33956,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:53:105"
            },
            "payable": false,
            "returnParameters": {
              "id": 33959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:105"
            },
            "scope": 33996,
            "src": "475:431:105",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 33997,
        "src": "211:697:105"
      }
    ],
    "src": "0:909:105"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-21T21:34:45.635Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseApproval(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseApproval(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}